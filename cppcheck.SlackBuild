#!/bin/sh
#
# Slackware build script for Cppcheck
# Copyright (C) 2017-2022 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=cppcheck
VERSION=2.7
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}
CPPCHECK_FILESDIR=/usr/share/${NAME}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract the source
cd $TMP
tar --extract --verbose --file=$CWD/${NAME}-${VERSION}.tar.gz || exit 3
cd $SRC
fix_source

# Apply patch
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  patch --backup --strip=1 --suffix=.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

# Configure
mkdir build; cd build
cmake .. -LAH \
        -DBUILD_GUI=ON \
        -DBUILD_TESTS=ON \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_CXX_FLAGS="${SLKCFLAGS}" \
        -DCMAKE_C_FLAGS="${SLKCFLAGS}" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_VERBOSE_MAKEFILE=ON \
        -DENABLE_OSS_FUZZ=ON \
        -DFILESDIR=${CPPCHECK_FILESDIR} \
        -DHAVE_RULES=yes \
        -DUSE_BUNDLED_TINYXML2=OFF \
        -DUSE_Z3=OFF \
        -DWITH_QCHART=ON || exit 5

# Build & install
make --jobs 8 || exit 6
DESTDIR=$PKG make install || exit 7
cd ..

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin )
( cd $SRC; create_docs $PKG ${NAME}-${VERSION} )
install --mode 644 --preserve-timestamps \
        $SRC/readme.txt $PKG/usr/doc/${NAME}-${VERSION}/README
install --mode 644 --preserve-timestamps \
        $SRC/gui/readme.txt $PKG/usr/doc/${NAME}-${VERSION}/README-GUI
gzip_man $PKG

install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc     $PKG/install/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required $PKG/install/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc              $SBDIR/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required          $SBDIR/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests          $SBDIR/slack-suggests
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}.SlackBuild      $SBDIR/${NAME}.SlackBuild

# Assemble
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
install --mode 644 $PKG/install/slack-desc $PKG_DIR/${PKGNAME}.txt

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
  rm --recursive $SRC
  rm --recursive $PKG
fi

